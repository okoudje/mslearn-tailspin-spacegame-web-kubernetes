trigger: 
  - 'master'

variables:
  buildConfiguration: 'Release'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  leaderBoardRepository: 'leaderBoard'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build all container and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - task: Docker@2
      displayName: 'Build and push Tailspin Web to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'democd2-acr-service-connection'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: 'Build and push leaderBoard to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderBoardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
        containerRegistry: 'democd2-acr-service-connection'
        tags: |
          $(tag)
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - deployment: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-18.04'
    environment: 'spike.Default'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          
          steps:
            - download: current
              artifact: manifests
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                 action: createSecret
                 secretName: $(imagePullSecret)
                 dockerRegistryEndpoint: 'democd2-acr-service-connection'
                 kubernetesServiceConnection: 'democd-aks-cluster-connection'
                 namespace: 'default'
            - task: KubernetesManifest@0
              displayName: 'Deploy to Kubernetes cluster'
              inputs:
                 action: deploy
                 kubernetesServiceConnection: 'democd-aks-cluster-connection'
                 namespace: 'default'
                 manifests: |
                   $(Pipeline.Workspace)/manifests/deployment.yml
                   $(Pipeline.Workspace)/manifests/service.yml
                 imagePullSecrets: |
                   $(imagePullSecret)
                 containers: |
                   $(registryName)/$(webRepository):$(tag)
                   $(registryName)/$(leaderboardRepository):$(tag)
    